ROUTINE FCE.Address.1 [Type=INT,Generated]
 ;FCE.Address.1
 ;Generated for class FCE.Address.  Do NOT edit. 08/14/2023 08:17:24AM
 ;;784E6B4F;FCE.Address
 ;
%JSONNew(dynamicObject,containerOref="") methodimpl {
  Quit ##class(FCE.Address).%New()
}
Print() methodimpl {
	write !, ..Street
	write !, ..City, ", ", ..State, " ", ..Zip }
zXMLDTD(top,format,input,dtdlist) methodimpl
 Quit ##class(%XML.Implementation).XMLDTD("FCE.Address",.top,.format,.input,.dtdlist)
zXMLGetSchemaImports(imports,classes) methodimpl
 Quit ##class(%XML.Implementation).XMLGetSchemaImports("FCE.Address",.imports,.classes)
zXMLIsObjectEmpty(ignoreNull) methodimpl
 If ..Street'="" Quit 0
 If ..City'="" Quit 0
 If ..State'="" Quit 0
 If ..Zip'="" Quit 0
 Quit 1
zXMLNew(document,node,containerOref="") methodimpl
	Quit (##class(FCE.Address).%New())
zXMLSchema(top="",format="",namespacePrefix="",input=0,refOnly=0,schema) methodimpl
 Quit ##class(%XML.Implementation).XMLSchema("FCE.Address",top,format,namespacePrefix,input,refOnly,.schema)
StateIsValid(%val) methodimpl {
	Q $s(%val'["-"&&("-NY-NJ-MA-TX-"[("-"_$select(%val=$c(0):"",1:%val)_"-")):1,1:$$Error^%apiOBJ(7205,%val,"-NY-NJ-MA-TX")) }
ZipIsValid(%val) methodimpl {
	if ("\d{5}(-\d{4})?" '= "") {
		try {
			if '$match(%val, "\d{5}(-\d{4})?") {
				return $$Error^%apiOBJ(7209, %val, "\d{5}(-\d{4})?")
			}
		} catch Ex {
			return $$Error^%apiOBJ(8311)
		}
	}
	return 1 }