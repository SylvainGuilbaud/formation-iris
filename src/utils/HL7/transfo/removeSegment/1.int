ROUTINE utils.HL7.transfo.removeSegment.1 [Type=INT,Generated]
 ;utils.HL7.transfo.removeSegment.1
 ;Generated for class utils.HL7.transfo.removeSegment.  Do NOT edit. 08/23/2023 04:24:50PM
 ;;6A2F4335;utils.HL7.transfo.removeSegment
 ;
GetSourceDocType() methodimpl {
 Quit "2.6:ADT_A01" }
GetSourceType() methodimpl {
 Quit "EnsLib.HL7.Message" }
GetTargetDocType() methodimpl {
 Quit "2.6:ADT_A01" }
GetTargetType(pCreate) methodimpl {
 Set pCreate="copy"
 Quit "EnsLib.HL7.Message" }
Transform(source,target,aux="") [ process,context ] methodimpl {
	Set (tSC,tSCTrans,tSCGet)=1
	Try {
		If '$IsObject(source) Set tSC=$$Error^%apiOBJ(5001,"No source object") Quit
		Set:""=source.DocType tBlankSrc=1, source.DocType="2.6:ADT_A01"
		Set target = source.%ConstructClone(1)
		If '$IsObject(target) Set tSC=%objlasterror Quit
		Do:$S($D(%Ensemble("DoTrace")):%Ensemble("DoTrace"),1:##class(Ens.Util.Trace).DoTrace()) ##class(Ens.Util.Trace).WriteTrace("xform",$classname(),"Transform","transform from source "_source_$S(source.%Extends("%Persistent"):"/"_source.%Id(),1:"")_" to target "_target_$S(target.%Extends("%Persistent"):"/"_target.%Id(),1:"")_"")
		Set target.DocType = "2.6:ADT_A01"
		Try { Set tSC1=target.SetValueAt(,"EVN","remove","")  Set:('tSCGet) tSC1=$select(+tSC1:tSCGet,1:$$AppendStatus^%occSystem(tSC1,tSCGet)) } Catch ex { Set tSC1 = ex.AsStatus() }
		Set:('tSC1)&&('..#IGNOREMISSINGSOURCE||(($$GetOneStatusText^%apiOBJ(tSC1)'["No segment found")&&($$GetOneStatusText^%apiOBJ(tSC1)'["is not an element, instead this node")&&($$GetOneStatusText^%apiOBJ(tSC1)'["<INVALID OREF>"))) tSCTrans=$select(+tSCTrans:tSC1,1:$$AppendStatus^%occSystem(tSCTrans,tSC1))
		Try { Set tSC1=target.SetValueAt(,"DG1()","remove","")  Set:('tSCGet) tSC1=$select(+tSC1:tSCGet,1:$$AppendStatus^%occSystem(tSC1,tSCGet)) } Catch ex { Set tSC1 = ex.AsStatus() }
		Set:('tSC1)&&('..#IGNOREMISSINGSOURCE||(($$GetOneStatusText^%apiOBJ(tSC1)'["No segment found")&&($$GetOneStatusText^%apiOBJ(tSC1)'["is not an element, instead this node")&&($$GetOneStatusText^%apiOBJ(tSC1)'["<INVALID OREF>"))) tSCTrans=$select(+tSCTrans:tSC1,1:$$AppendStatus^%occSystem(tSCTrans,tSC1))
	} Catch thrownErr {
		If $ZE="" {
			Set tSC=thrownErr.AsStatus()
			Do ##class(Ens.Util.Log).LogStatus($classname(),"Transform",tSC)
		} Else {
			Set tSC=##class(Ens.Util.Error).EnsSystemError($classname(),"Transform")
		}
	}
	If ('tSCTrans) Do ##class(Ens.Util.Log).LogStatus($classname(),"Transform",tSCTrans)  Quit:(''tSC) tSCTrans
	Set:$G(tBlankSrc) source.DocType=""
	Quit tSC }