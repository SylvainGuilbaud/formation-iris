
===============================================================================
Directory: /data/unittests/Test3/
===============================================================================
  Test3 begins ...
Load of directory started on 01/12/2024 15:44:23 '*.xml;*.XML;*.cls;*.mac;*.int;*.inc;*.CLS;*.MAC;*.INT;*.INC'

Loading file /data/unittests/Test3/TestCase.cls as udl
Loading file /data/unittests/Test3/PaymentTests.cls as udl
Loading file /data/unittests/Test3/Utilities.cls as udl
Loading file /data/unittests/Test3/BasicTests.cls as udl

Compilation started on 01/12/2024 15:44:23
Compiling 4 classes
Compiling class FCE.Tests.Utilities
Compiling class FCE.Tests.TestCase
Compiling class FCE.Tests.PaymentTests
Compiling class FCE.Tests.BasicTests
Compiling routine FCE.Tests.TestCase.1
Compiling routine FCE.Tests.Utilities.1
Compiling routine FCE.Tests.PaymentTests.1
Compiling routine FCE.Tests.BasicTests.1
Compilation finished successfully in 0.058s.

Load finished successfully.

    FCE.Tests.BasicTests begins ...
      TestAccountHolder() begins ...
        AssertTrue:Create new account holder (passed)
        AssertStatusNotOK:Name is required (passed)
        AssertStatusNotOK:Email is required (passed)
        AssertStatusNotOK:Home/work address is required (passed)
        AssertStatusNotOK:DOB must be in past (passed)
        AssertStatusNotOK:Invalid currency type (passed)
        AssertStatusNotOK:Balance must be >= 0 (passed)
        AssertStatusOK:New account holder saved (passed)
        AssertStatusOK:New account holder deleted (passed)
        LogMessage:Duration of execution: .014832 sec.
      TestAccountHolder passed
      TestAccountHolderSQL() begins ...
        AssertEquals:Email is required (passed)
        AssertEquals:Home/work addresses required (passed)
        AssertEquals:DOB must be in past (passed)
        AssertEquals:Invalid currency type (passed)
        AssertEquals:Balance must be >= 0 (passed)
        AssertEquals:New account holder saved: (passed)
        AssertEquals:New account holder deleted (passed)
        LogMessage:Duration of execution: .008771 sec.
      TestAccountHolderSQL passed
      TestBranch() begins ...
        AssertTrue:Created New Branch (passed)
        AssertStatusNotOK:Phone is required (passed)
        AssertStatusNotOK:Phone doesn't match pattern: ###-###-#### (passed)
        AssertStatusNotOK:Phone must be unique (passed)
        AssertStatusNotOK:Another Branch already has this address (passed)
        AssertStatusNotOK:Opening at 5am too early (passed)
        AssertStatusNotOK:Closing at 11pm too late (passed)
        AssertStatusNotOK:ABC is invalid currency (passed)
        AssertStatusOK:Branch saved (passed)
        AssertNotEquals:ID assigned (passed)
        AssertStatusOK:Branch deleted (passed)
        LogMessage:Duration of execution: .085898 sec.
      TestBranch passed
      TestBranchSQL() begins ...
        AssertEquals:Phone is required (passed)
        AssertEquals:Phone doesn't match pattern: ###-###-#### (passed)
        AssertEquals:Phone must be unique (passed)
        AssertEquals:Opening at 5am too early (passed)
        AssertEquals:Closing at 11pm too late (passed)
        AssertEquals:ABC is invalid currency (passed)
        AssertEquals:Branch saved (passed)
        AssertNotEquals:ID assigned (passed)
        AssertEquals:Branch deleted (passed)
        LogMessage:Duration of execution: .012615 sec.
      TestBranchSQL passed
      TestCurrenciesATMs() begins ...
        AssertStatusNotOK:Currency Balance must be <= 1000000 (passed)
        AssertStatusNotOK:ERROR #5001: Invalid key: ABC (passed)
        AssertStatusOK:Branch with Currency Balance saved (passed)
        AssertEquals:Branch has one Currency Balance (passed)
        AssertNotEquals:RemoveAt() requires exact key (passed)
        AssertEquals:Currency Balance Removed (passed)
        AssertEquals:Branch has three ATMs (passed)
        AssertEquals:Branch's original 2nd ATM deleted (passed)
        AssertEquals:Branch's original 3rd ATM now in position 2 (passed)
        AssertStatusOK:Branch deleted (passed)
        LogMessage:Duration of execution: .013878 sec.
      TestCurrenciesATMs passed
      TestCurrenciesSQL() begins ...
        AssertEquals:Currency Balance must be <= 1000000 (passed)
        AssertEquals:Branch with Currency Balance saved (passed)
        AssertEquals:Currency Balance count retrieved (passed)
        AssertEquals:Branch has one Currency Balance (passed)
        AssertEquals:Currency Balance removed (passed)
        AssertEquals:Branch deleted (passed)
        LogMessage:Duration of execution: .007561 sec.
      TestCurrenciesSQL passed
      TestCurrencyOrder() begins ...
        AssertStatusOK:Branch saved (passed)
        AssertEquals:No orders yet (passed)
        AssertTrue:Create order 1 (passed)
        AssertEquals:Branch has 1 order (passed)
        AssertStatusOK:Order 1 saved (passed)
        AssertNotEquals:Order 1 ID assigned (passed)
        AssertTrue:Create order 2 (passed)
        AssertEquals:Branch has 2 orders (passed)
        AssertStatusOK:Branch and order 2 saved (passed)
        AssertNotEquals:Order 2 ID assigned (passed)
        LogMessage:All objects closed
        AssertTrue:Order 2 retrieved (passed)
        AssertEquals:Branch retrieved (passed)
        AssertEquals:Branch has 2 orders (passed)
        LogMessage:All objects closed
        AssertStatusNotOK:Order 3 not saved, branch required (passed)
        AssertStatusNotOK:Branch can't be deleted while it has orders (passed)
        AssertStatusOK:Order 1 deleted (passed)
        AssertStatusOK:Order 2 deleted (passed)
        AssertStatusOK:Branch deleted (passed)
        LogMessage:Duration of execution: .02624 sec.
      TestCurrencyOrder passed
      TestCurrencyOrderSQL() begins ...
        AssertEquals:Branch saved (passed)
        AssertNotEquals:Branch ID assigned (passed)
        AssertEquals:Order 1 linked to Branch and saved (passed)
        AssertNotEquals:Order 1 ID assigned (passed)
        AssertEquals:Order 2 not saved, branch required (passed)
        AssertEquals:Branch can't be deleted while it has orders (passed)
        AssertEquals:Order 1 deleted (passed)
        AssertEquals:Branch deleted (passed)
        LogMessage:Duration of execution: .008509 sec.
      TestCurrencyOrderSQL passed
      TestRealEstate() begins ...
        AssertStatusNotOK:Real Estate requires all 4 properties (passed)
        AssertStatusNotOK:Real Estate requires all 4 properties (passed)
        AssertStatusNotOK:Real Estate requires all 4 properties (passed)
        AssertStatusNotOK:State must be on VALUELIST and must match case (passed)
        AssertStatusNotOK:Real Estate requires all 4 properties (passed)
        AssertStatusNotOK:ZipCode must be ##### or #####-#### (passed)
        AssertStatusNotOK:ZipCode must be ##### or #####-#### (passed)
        AssertStatusOK:Real Estate saved (passed)
        AssertStatusOK:Branch saved (passed)
        LogMessage:All objects closed
        AssertEquals:Branch references Real Estate (passed)
        LogMessage:All objects closed
        AssertStatusOK:Real Estate deleted (passed)
        AssertEquals:Branch not linked to Real Estate (passed)
        AssertStatusOK:Branch deleted (passed)
        LogMessage:Duration of execution: .018604 sec.
      TestRealEstate passed
      TestRealEstateSQL() begins ...
        AssertEquals:Real Estate requires all 4 properties (passed)
        AssertEquals:Real Estate requires all 4 properties (passed)
        AssertEquals:State must be on VALUELIST and must match case (passed)
        AssertEquals:Real Estate requires all 4 properties (passed)
        AssertEquals:ZipCode must be ##### or #####-#### (passed)
        AssertEquals:ZipCode must be ##### or #####-#### (passed)
        AssertEquals:Real Estate saved (passed)
        AssertNotEquals:Real Estate ID assigned (passed)
        AssertEquals:Branch saved (passed)
        AssertEquals:City retrieved (passed)
        AssertEquals:Branch references Real Estate (passed)
        AssertEquals:Real Estate deleted (passed)
        AssertEquals:Real Estate ID retrieved (passed)
        AssertEquals:Branch not linked to Real Estate (passed)
        AssertEquals:Branch deleted (passed)
        LogMessage:Duration of execution: .018455 sec.
      TestRealEstateSQL passed
      TestUpdateBranch() begins ...
        AssertStatusNotOK:ERROR #5001: Not enough stock in branch for EUR (passed)
        AssertEquals:Outgoing currency remains the same (passed)
        AssertEquals:Incoming currency remains the same (passed)
        AssertStatusNotOK:ERROR #5001: Branch has no more room for USD (passed)
        AssertEquals:Outgoing currency remains the same (passed)
        AssertEquals:Incoming currency remains the same (passed)
        AssertStatusOK:Branch updated (passed)
        AssertEquals:Outgoing currency updated correctly (passed)
        AssertEquals:Incoming currency updated correctly (passed)
        AssertStatusOK:Outgoing-only currency allowed (credit card or account payment) (passed)
        AssertEquals:Outgoing currency updated correctly (passed)
        AssertEquals:Incoming currency remains the same (passed)
        AssertStatusOK:Incoming-only currency allowed (crediting account balance) (passed)
        AssertEquals:Outgoing currency remains the same (passed)
        AssertEquals:Incoming currency updated correctly (passed)
        AssertStatusNotOK:Invalid incoming currency (passed)
        AssertEquals:Outgoing currency remains the same (passed)
        AssertEquals:Incoming currency remains the same (passed)
        LogMessage:Duration of execution: .08734 sec.
      TestUpdateBranch passed
    FCE.Tests.BasicTests passed
    FCE.Tests.PaymentTests begins ...
Error code(s): 100 100
      TestAccountPayment() begins ...
        AssertTrue:Create new account payment (passed)
        AssertNotEquals:New account payment saved by Process() method (passed)
        AssertNotEquals:Message Generated: "Re: your request of: 95 EUR, at an exchange rate of: 0 EUR per 1 USD (Verification ID: R5404)...
Thank you, John Smith, for your account payment of 100 USD." (passed)
        AssertStatusOK:Order saved (passed)
        AssertStatusNotOK:Foreign key constraint prevents account payment deletion (passed)
        AssertStatusOK:Payment removed from order (passed)
        AssertStatusOK:New account payment deleted (passed)
        LogMessage:Duration of execution: .009003 sec.
      TestAccountPayment passed
      TestCCPayment() begins ...
        AssertTrue:Create new credit card payment (passed)
        AssertStatusNotOK:Type must be Visa,MC,etc. (passed)
        AssertStatusNotOK:Number must match pattern (passed)
        AssertStatusOK:New credit card payment valid (passed)
        AssertNotEquals:New credit card payment saved by Process() method (passed)
        AssertNotEquals:Message Generated: "Re: your request of: 95 EUR, at an exchange rate of: 0 EUR per 1 USD (Verification ID: P4260)...
Visa transaction for 100 USD completed (card ending in 1234)." (passed)
        AssertStatusOK:Order saved (passed)
        AssertStatusNotOK:Foreign key constraint prevents credit card payment deletion (passed)
        AssertStatusOK:Payment removed from order (passed)
        AssertStatusOK:New credit card payment deleted (passed)
        LogMessage:Duration of execution: .013794 sec.
      TestCCPayment passed
      TestCashPayment() begins ...
        AssertTrue:Create new cash payment (passed)
        AssertNotEquals:New cash payment saved by Process() method (passed)
        AssertNotEquals:Message Generated: "Re: your request of: 95 EUR, at an exchange rate of: 0 EUR per 1 USD (Verification ID: G6087)...
Cash payment of 100 USD verified." (passed)
        AssertStatusOK:Order saved (passed)
        AssertStatusNotOK:Foreign key constraint prevents cash payment deletion (passed)
        AssertStatusOK:Payment removed from order (passed)
        AssertStatusOK:New cash payment deleted (passed)
        LogMessage:Duration of execution: .011327 sec.
      TestCashPayment passed
    FCE.Tests.PaymentTests passed
    FCE.Tests.TestCase begins ...
    FCE.Tests.TestCase passed
  Test3 passed

Use the following URL to view the result:
http://172.0.0.10:52773/csp/sys/%25UnitTest.Portal.Indices.cls?Index=19&$NAMESPACE=IRISAPP
All PASSED
END RESULTS 2024-01-12 15:44:24