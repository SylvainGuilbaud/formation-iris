<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="22" zv="Cache for Windows (x86-64) 2008.2.6 (Build 964U)" ts="2011-06-21 15:29:34">
<Class name="Mapping.Address">
<ClassType>serial</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>%SerialObject</Super>
<TimeChanged>61583,32167</TimeChanged>
<TimeCreated>59820,30854.493773</TimeCreated>

<Parameter name="SERIALDELIMITER">
<Default>|</Default>
</Parameter>

<Property name="Street">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="City">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="State">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ZipCode">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheSerialState</Type>
<State>AddressState</State>
<StreamLocation>^Mapping.AddressS</StreamLocation>
<Data name="AddressState">
<Structure>listnode</Structure>
<Subscript>"Mapping.Address"</Subscript>
<Value name="1">
<Value>City</Value>
</Value>
<Value name="2">
<Value>State</Value>
</Value>
<Value name="3">
<Value>Street</Value>
</Value>
<Value name="4">
<Value>Town</Value>
</Value>
<Value name="5">
<Value>ZipCode</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="Mapping.SubClass">
<Super>Mapping.Super</Super>
<TimeChanged>62263,47657.077593</TimeChanged>
<TimeCreated>62263,47581.606514</TimeCreated>

<Property name="Title">
<Type>%String</Type>
</Property>

<Storage name="NewStorage1">
<Type>%Library.CacheSQLStorage</Type>
<SQLMap name="Master">
<Data name="Title">
<Delimiter>"^"</Delimiter>
<Node>1</Node>
<Piece>1</Piece>
</Data>
</SQLMap>
</Storage>
</Class>


<Class name="Mapping.Super">
<Description>
Mapping.Super and Mapping.SubClass give an example of how you can extend a Class with Cache SQL Storage.

The trick to mapping the sub class is that you do not define a full Storage Map.
The SQLMap name must be the same as the Master map of the Super class
Only define new Data sections for new Properties
Do not define any Subscript levels, they will come from the Super class.

If you want the Sub Class to not display rows of the Super class you have to write Invalid Code in the Subscripts of the map.
Since you do not define the Subscripts in the sub class you need to write general Invalid Code that will work for the super class and any SubClass.
Theer is a special variable {%%ClassNameQ} that you can use for this.

The global for these two classes look like:
 ^Mapping("SuperClass",1)="Plainville|MA|15 cliff Dr||02762^45956^Brendan^023-11-2345"
 ^Mapping("SuperClass",2)="Plainville|MA|15 cliff Dr||02762^46647^Sharon^023-11-5432"
 ^Mapping("SuperClass",9)="Plainville|MA|One memorial Dr||02134^48108^Al^023-11-9999"
 ^Mapping("SuperClass",9,1)="Support Adviser"
 ^Mapping("SuperClass",9,"Class")="Mapping.SubClass"
 ^Mapping("SuperClass",10)="Boston|MA|100 Charles St.||02135^50299^Jen^023-11-9978"
 ^Mapping("SuperClass",10,1)="Doctor"
 ^Mapping("SuperClass",10,"Class")="Mapping.SubClass"</Description>
<StorageStrategy>NewStorage1</StorageStrategy>
<Super>%Persistent</Super>
<TimeChanged>62263,55700.807513</TimeChanged>
<TimeCreated>62263,47312.036259</TimeCreated>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="DOB">
<Type>%Date</Type>
</Property>

<Property name="SSN">
<Type>%String</Type>
</Property>

<Property name="Address">
<Type>Mapping.Address</Type>
</Property>

<Property name="Sub1">
<Type>%Integer</Type>
</Property>

<Property name="xclassname">
<Type>%String</Type>
<Internal>1</Internal>
<SqlComputeCode> s {*}={%%CLASSNAMEQ}</SqlComputeCode>
<SqlComputed>1</SqlComputed>
<SqlFieldName>x__classname</SqlFieldName>
</Property>

<Index name="Master">
<IdKey>1</IdKey>
<Properties>Sub1</Properties>
</Index>

<Storage name="NewStorage1">
<Type>%CacheSQLStorage</Type>
<StreamLocation>^Mapping.SuperS</StreamLocation>
<SQLMap name="Master">
<Type>data</Type>
<Global>^Mapping</Global>
<Subscript name="1">
<Expression>"SuperClass"</Expression>
</Subscript>
<Subscript name="2">
<Expression>{Sub1}</Expression>
<Invalidcondition name="1">
<Expression>$S({%%CLASSNAMEQ}="Mapping.Super":0,{%%CLASSNAMEQ}=$G(^Mapping("SuperClass",{L2},"Class")):0,1:1)</Expression>
</Invalidcondition>
</Subscript>
<Data name="Address">
<Delimiter>"^"</Delimiter>
<Piece>1</Piece>
</Data>
<Data name="DOB">
<Delimiter>"^"</Delimiter>
<Piece>2</Piece>
</Data>
<Data name="Name">
<Delimiter>"^"</Delimiter>
<Piece>3</Piece>
</Data>
<Data name="SSN">
<Delimiter>"^"</Delimiter>
<Piece>4</Piece>
</Data>
<Data name="x__classname">
<Delimiter>"^"</Delimiter>
<Node>"Class"</Node>
<Piece>1</Piece>
</Data>
</SQLMap>
</Storage>
</Class>
</Export>
